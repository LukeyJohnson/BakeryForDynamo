<Workspace Version="1.3.3.4651" X="344.02548" Y="27.9498300000001" zoom="0.70823125" ScaleFactor="1" Name="Get 3D views" Description="Retrieves the 3D views in the active or given document." ID="e693ae2d-85bf-4f45-a281-6e5764ce1491" Category="GeniusLoci.View">
  <NamespaceResolutionMap />
  <Elements>
    <Dynamo.Graph.Nodes.CustomNodes.Output guid="f5c2bb73-e7f4-4ec3-8eb7-ee8f552365f0" type="Dynamo.Graph.Nodes.CustomNodes.Output" nickname="Output" x="417.833828993002" y="241.504254436669" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false">
      <PortInfo index="0" default="False" />
      <Symbol value="3D views" />
    </Dynamo.Graph.Nodes.CustomNodes.Output>
    <Dynamo.Graph.Nodes.CustomNodes.Symbol guid="ed5375a0-594e-4b3f-bfaa-7a8d3518798c" type="Dynamo.Graph.Nodes.CustomNodes.Symbol" nickname="Input" x="-210.4" y="244.8" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false" isPinned="false">
      <Symbol value="// Use only if you want to query a linked model&#xD;&#xA;docOrRevitLinkInstance : var = null" />
    </Dynamo.Graph.Nodes.CustomNodes.Symbol>
    <PythonNodeModels.PythonNode guid="cb5dd82b-410a-4184-aff2-af701c2cbd35" type="PythonNodeModels.PythonNode" nickname="Python Script" x="249.133187006949" y="244.170692786144" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false" inputcount="1">
      <PortInfo index="0" default="False" />
      <Script>#Copyright(c) 2015, Konrad Sobon
# @arch_laboratory, http://archi-lab.net

import clr
clr.AddReference('ProtoGeometry')
from Autodesk.DesignScript.Geometry import *

# Import DocumentManager and TransactionManager
clr.AddReference("RevitServices")
import RevitServices
from RevitServices.Persistence import DocumentManager
from RevitServices.Transactions import TransactionManager

# Import RevitAPI
clr.AddReference("RevitAPI")
import Autodesk
from Autodesk.Revit.DB import *

from System.Collections.Generic import *

# Import ToDSType(bool) extension method
clr.AddReference("RevitNodes")
import Revit
clr.ImportExtensions(Revit.Elements)

#Part of script from Clockwork
inputdoc = UnwrapElement(IN[0])
if inputdoc == None:
	doc = DocumentManager.Instance.CurrentDBDocument
elif inputdoc.GetType().ToString() == "Autodesk.Revit.DB.RevitLinkInstance":
	doc = inputdoc.GetLinkDocument()
elif inputdoc.GetType().ToString() == "Autodesk.Revit.DB.Document":
	doc = inputdoc
else: doc = None

#collect all views in the model
views = FilteredElementCollector(doc).OfClass(View).ToElements()

#sort views into separate lists based on view type
threeD = []
for i in views:
	if not i.IsTemplate:
		if i.ViewType == ViewType.ThreeD:
			threeD.append(i.ToDSType(True))
		else:
			continue

#Assign your output to the OUT variable
OUT = threeD</Script>
    </PythonNodeModels.PythonNode>
  </Elements>
  <Connectors>
    <Dynamo.Graph.Connectors.ConnectorModel start="ed5375a0-594e-4b3f-bfaa-7a8d3518798c" start_index="0" end="cb5dd82b-410a-4184-aff2-af701c2cbd35" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="cb5dd82b-410a-4184-aff2-af701c2cbd35" start_index="0" end="f5c2bb73-e7f4-4ec3-8eb7-ee8f552365f0" end_index="0" portType="0" />
  </Connectors>
  <Notes />
  <Annotations />
  <Presets />
  <Cameras>
    <Camera Name="Aperçu en arrière-plan" eyeX="-17" eyeY="24" eyeZ="50" lookX="12" lookY="-13" lookZ="-58" upX="0" upY="1" upZ="0" />
  </Cameras>
</Workspace>