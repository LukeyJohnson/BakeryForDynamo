<Workspace Version="1.3.3.4651" X="267.173937848332" Y="123.21134437602" zoom="0.789531730130975" ScaleFactor="1" Name="Print PDF in Document (multiple formats)" Description="This node will allow you to initiate a printing routine from a set of views/sheets, filename, printer name, print settings with many formats and print range from document.&#xD;&#xA;Use MergePDFs node to combine files.&#xD;&#xA;From archilab." ID="383dd71f-1aec-4c46-964d-2a1ed6810e0c" Category="GeniusLoci.Printing">
  <NamespaceResolutionMap />
  <Elements>
    <Dynamo.Graph.Nodes.CustomNodes.Symbol guid="1f595f49-815b-4942-9228-a0c1ae77c96b" type="Dynamo.Graph.Nodes.CustomNodes.Symbol" nickname="Input" x="-462.809194144232" y="563.008474069529" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false" isPinned="false">
      <Symbol value="Document" />
    </Dynamo.Graph.Nodes.CustomNodes.Symbol>
    <Dynamo.Graph.Nodes.CustomNodes.Symbol guid="d60677b8-7da0-4d95-881e-53deba42b7df" type="Dynamo.Graph.Nodes.CustomNodes.Symbol" nickname="Input" x="-606.006914581728" y="365.993584711468" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false" isPinned="false">
      <Symbol value="//As many filepaths as views&#xD;&#xA;//Must include : Directory + name + .pdf extension&#xD;&#xA;FilePaths" />
    </Dynamo.Graph.Nodes.CustomNodes.Symbol>
    <Dynamo.Graph.Nodes.CustomNodes.Output guid="0f3fa82f-4f31-43e4-880b-86d7dc492467" type="Dynamo.Graph.Nodes.CustomNodes.Output" nickname="Output" x="305.190805855768" y="155.008474069529" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false">
      <PortInfo index="0" default="False" />
      <Symbol value="Result" />
    </Dynamo.Graph.Nodes.CustomNodes.Output>
    <Dynamo.Graph.Nodes.CustomNodes.Symbol guid="add8aa1f-182a-434c-a2a3-f8974d451125" type="Dynamo.Graph.Nodes.CustomNodes.Symbol" nickname="Input" x="-462.809194144232" y="-54.991525930471" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false" isPinned="false">
      <Symbol value="Views" />
    </Dynamo.Graph.Nodes.CustomNodes.Symbol>
    <Dynamo.Graph.Nodes.CustomNodes.Symbol guid="9e0e7438-bd0a-4a96-ae7f-cc65bda4b273" type="Dynamo.Graph.Nodes.CustomNodes.Symbol" nickname="Input" x="-462.809194144232" y="277.008474069529" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false" isPinned="false">
      <Symbol value="//As many printsettings as views&#xD;&#xA;PrintSetting" />
    </Dynamo.Graph.Nodes.CustomNodes.Symbol>
    <Dynamo.Graph.Nodes.CustomNodes.Symbol guid="13c5bc16-1841-4a14-8470-3c4f8cd007c6" type="Dynamo.Graph.Nodes.CustomNodes.Symbol" nickname="Input" x="-462.809194144232" y="194.008474069529" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false" isPinned="false">
      <Symbol value="PrinterName" />
    </Dynamo.Graph.Nodes.CustomNodes.Symbol>
    <Dynamo.Graph.Nodes.CustomNodes.Symbol guid="1e73fb57-04fb-4b7e-9636-d323286cebf0" type="Dynamo.Graph.Nodes.CustomNodes.Symbol" nickname="Input" x="-462.809194144232" y="28.008474069529" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false" isPinned="false">
      <Symbol value="PrintRange" />
    </Dynamo.Graph.Nodes.CustomNodes.Symbol>
    <Dynamo.Graph.Nodes.CustomNodes.Symbol guid="5692b5f3-68b8-4368-b45d-0cab31f24819" type="Dynamo.Graph.Nodes.CustomNodes.Symbol" nickname="Input" x="-462.809194144232" y="480.008474069529" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false" isPinned="false">
      <Symbol value="RunIt:bool=false" />
    </Dynamo.Graph.Nodes.CustomNodes.Symbol>
    <PythonNodeModels.PythonNode guid="1dfa4029-9047-4e5f-ae55-56e177af9d34" type="PythonNodeModels.PythonNode" nickname="Python Script" x="80.3908058557682" y="155.008474069529" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false" inputcount="8">
      <PortInfo index="0" default="False" />
      <PortInfo index="1" default="False" />
      <PortInfo index="2" default="False" />
      <PortInfo index="3" default="False" />
      <PortInfo index="4" default="False" />
      <PortInfo index="5" default="False" />
      <PortInfo index="6" default="False" />
      <PortInfo index="7" default="False" />
      <Script>#Copyright(c) 2015, Konrad K Sobon
# @arch_laboratory, http://archi-lab.net
# Revised by Gustav Blom
# Revised by Michael Park
# Revised by Alban de Chasteigner

import clr
clr.AddReference('ProtoGeometry')
from Autodesk.DesignScript.Geometry import *

# Import Element wrapper extension methods
clr.AddReference("RevitNodes")
import Revit
clr.ImportExtensions(Revit.Elements)

# Import geometry conversion extension methods
clr.ImportExtensions(Revit.GeometryConversion)

# Import DocumentManager and TransactionManager
clr.AddReference("RevitServices")
import RevitServices
from RevitServices.Persistence import DocumentManager
from RevitServices.Transactions import TransactionManager

doc = IN[7]

# Import RevitAPI
clr.AddReference("RevitAPI")
import Autodesk
from Autodesk.Revit.DB import *

import sys
pyt_path = r'C:\Program Files (x86)\IronPython 2.7\Lib'
sys.path.append(pyt_path)
import System

# The inputs to this node will be stored as a list in the IN variable.
dataEnteringNode = IN

sheets = IN[0]
pRange = System.Enum.Parse(Autodesk.Revit.DB.PrintRange, IN[1])
combined = IN[2]
printerName = IN[3]
printSetting = IN[4]
filePath = IN[5]
runIt = IN[6]

if isinstance(filePath, list):
	s_length = len(sheets)
	fp_length = len(filePath)
	if len(sheets) == len(filePath):
		pass
	else:
		filePath = filePath * (s_length / fp_length)
		if len(filePath) == len(sheets):
			pass
		else:
			OUT = "Filepaths and Sheets weren't the same length"
			exit()

elif isinstance(filePath, str):
	filepath = [filepath] * len(sheets)

if isinstance(sheets, list):
	viewSheets = []
	for i in sheets:
		viewSheets.append(UnwrapElement(i))
else:
	viewSheets = UnwrapElement(sheets)

def PrintView(doc, sheet, pRange, printerName, combined, filePath, printSetting):
	# create view set
	viewSet = ViewSet()
	viewSet.Insert(sheet)
	# determine print range
	printManager = doc.PrintManager
	printManager.PrintRange = pRange
	printManager.Apply()
	# make new view set current
	viewSheetSetting = printManager.ViewSheetSetting
	viewSheetSetting.CurrentViewSheetSet.Views = viewSet
	# set printer
	printManager.SelectNewPrintDriver(printerName)
	printManager.Apply()
	# set combined and print to file
	if printManager.IsVirtual:
		printManager.CombinedFile = combined
		printManager.Apply()
		printManager.PrintToFile = True
		printManager.Apply()
	else:
		printManager.CombinedFile = combined
		printManager.Apply()
		printManager.PrintToFile = False
		printManager.Apply()
	# set file path
	printManager.PrintToFileName = filePath
	printManager.Apply()
	# apply print setting
	ps = FilteredElementCollector(doc).OfClass(PrintSetting)
	for k in ps:
		if k.Name == printSetting.Name:
			newPrintSetting = k
	# save settings and submit print
	t = Transaction(doc,'temp')
	t.Start()
	printSetup = printManager.PrintSetup
	printSetup.CurrentPrintSetting = newPrintSetting
	printManager.Apply()
	viewSheetSetting.SaveAs("tempSetName")
	printManager.Apply()
	printManager.SubmitPrint()
	viewSheetSetting.Delete()
	t.Commit()

	return True

try:
	viewSets = FilteredElementCollector(doc).OfClass(ViewSheetSet)
	for i in viewSets:
		if i.Name == "tempSetName":
			doc.Delete(i.Id)
		else:
			continue

	errorReport = None
	message = "Success"
	if runIt:
		if isinstance(viewSheets, list) and isinstance(printSetting, list):
			for i, j, fp in zip(viewSheets, printSetting, filePath):
				PrintView(doc, i, pRange, printerName, combined, fp, j)
		elif isinstance(viewSheets, list) and not isinstance(printSetting, list):
			for i, fp in zip(viewSheets, filePath):
				PrintView(doc, i, pRange, printerName, combined, fp, printSetting)
		elif not isinstance(viewSheets, list) and not isinstance(printSetting, list):
			PrintView(doc, viewSheets, pRange, printerName, combined, filePath[0], printSetting)
	else:
		message = "Set RunIt to True"
except:
	# if error accurs anywhere in the process catch it
	import traceback
	errorReport = traceback.format_exc()

# Assign your output to the OUT variable
if errorReport is None:
	OUT = message
else:
	OUT = errorReport</Script>
    </PythonNodeModels.PythonNode>
    <CoreNodeModels.Input.BoolSelector guid="d1451420-f324-46ec-b20a-5a618bc2bdef" type="CoreNodeModels.Input.BoolSelector" nickname="Boolean" x="-462.809194144232" y="111.008474069529" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false" isPinned="false">
      <System.Boolean>True</System.Boolean>
    </CoreNodeModels.Input.BoolSelector>
  </Elements>
  <Connectors>
    <Dynamo.Graph.Connectors.ConnectorModel start="1f595f49-815b-4942-9228-a0c1ae77c96b" start_index="0" end="1dfa4029-9047-4e5f-ae55-56e177af9d34" end_index="7" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="d60677b8-7da0-4d95-881e-53deba42b7df" start_index="0" end="1dfa4029-9047-4e5f-ae55-56e177af9d34" end_index="5" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="add8aa1f-182a-434c-a2a3-f8974d451125" start_index="0" end="1dfa4029-9047-4e5f-ae55-56e177af9d34" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="9e0e7438-bd0a-4a96-ae7f-cc65bda4b273" start_index="0" end="1dfa4029-9047-4e5f-ae55-56e177af9d34" end_index="4" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="13c5bc16-1841-4a14-8470-3c4f8cd007c6" start_index="0" end="1dfa4029-9047-4e5f-ae55-56e177af9d34" end_index="3" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="1e73fb57-04fb-4b7e-9636-d323286cebf0" start_index="0" end="1dfa4029-9047-4e5f-ae55-56e177af9d34" end_index="1" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="5692b5f3-68b8-4368-b45d-0cab31f24819" start_index="0" end="1dfa4029-9047-4e5f-ae55-56e177af9d34" end_index="6" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="1dfa4029-9047-4e5f-ae55-56e177af9d34" start_index="0" end="0f3fa82f-4f31-43e4-880b-86d7dc492467" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="d1451420-f324-46ec-b20a-5a618bc2bdef" start_index="0" end="1dfa4029-9047-4e5f-ae55-56e177af9d34" end_index="2" portType="0" />
  </Connectors>
  <Notes />
  <Annotations />
  <Presets />
  <Cameras>
    <Camera Name="Aperçu en arrière-plan" eyeX="-17" eyeY="24" eyeZ="50" lookX="12" lookY="-13" lookZ="-58" upX="0" upY="1" upZ="0" />
  </Cameras>
</Workspace>