<Workspace Version="0.9.2.4472" X="-683.62375135818" Y="-322.306388900621" zoom="1.545620359375" Name="View.ConvertToIndependent" Description="This will convert input dependent views to independent. Thanks to TheRevitKid for the idea!" ID="21280402-cc74-418e-bf44-0fc47adc0b33" Category="Rhythm.Revit.Views.View.Action">
  <NamespaceResolutionMap />
  <Elements>
    <Dynamo.Graph.Nodes.CodeBlockNodeModel guid="7737876a-4586-4502-8a04-b885d805dd02" type="Dynamo.Graph.Nodes.CodeBlockNodeModel" nickname="Code Block" x="660.881936442935" y="414.248767083034" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" CodeText="Flatten({item});" ShouldFocus="false" />
    <PythonNodeModels.PythonNode guid="a11ee4c7-3c3c-4239-8e40-a8d5456bf776" type="PythonNodeModels.PythonNode" nickname="Python Script" x="944.216065782162" y="474.043690759969" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" inputcount="1">
      <Script>#Created by DPS Design, dpsdesign.org
import clr
clr.AddReference('ProtoGeometry')
from Autodesk.DesignScript.Geometry import *

# Import ToDSType(bool) extension method
clr.AddReference("RevitNodes")
import Revit
clr.ImportExtensions(Revit.Elements)

# Import DocumentManager and TransactionManager
clr.AddReference("RevitServices")
import RevitServices
from RevitServices.Persistence import DocumentManager
from RevitServices.Transactions import TransactionManager

from System.Collections.Generic import *

# Import RevitAPI
clr.AddReference("RevitAPI")
import Autodesk

doc = DocumentManager.Instance.CurrentDBDocument
uiapp = DocumentManager.Instance.CurrentUIApplication
app = uiapp.Application

#The inputs to this node will be stored as a list in the IN variable.
dataEnteringNode = IN

#unwrap all elements to use with API
items = UnwrapElement(IN[0])
TransactionManager.Instance.EnsureInTransaction(doc)

typelist = list()
for i in items:
	try:
		typelist.append(i.ConvertToIndependent())
	except:
		typelist.append(list())


# "End" the transaction
TransactionManager.Instance.TransactionTaskDone()

#Assign your output to the OUT variable
OUT = items</Script>
    </PythonNodeModels.PythonNode>
    <Dynamo.Graph.Nodes.CustomNodes.Symbol guid="7d4c515f-7d6c-46bd-ac08-aa10dbb5e6ab" type="Dynamo.Graph.Nodes.CustomNodes.Symbol" nickname="Input" x="548.403588382422" y="411.036503917119" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false">
      <Symbol value="view" />
    </Dynamo.Graph.Nodes.CustomNodes.Symbol>
    <Dynamo.Graph.Nodes.CustomNodes.Output guid="61079bda-989d-4457-ba26-7893e607a925" type="Dynamo.Graph.Nodes.CustomNodes.Output" nickname="Output" x="1102.2265209078" y="414.271450952898" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false">
      <Symbol value="independentView" />
    </Dynamo.Graph.Nodes.CustomNodes.Output>
  </Elements>
  <Connectors>
    <Dynamo.Graph.Connectors.ConnectorModel start="7737876a-4586-4502-8a04-b885d805dd02" start_index="0" end="a11ee4c7-3c3c-4239-8e40-a8d5456bf776" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="a11ee4c7-3c3c-4239-8e40-a8d5456bf776" start_index="0" end="61079bda-989d-4457-ba26-7893e607a925" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="7d4c515f-7d6c-46bd-ac08-aa10dbb5e6ab" start_index="0" end="7737876a-4586-4502-8a04-b885d805dd02" end_index="0" portType="0" />
  </Connectors>
  <Notes />
  <Annotations />
  <Presets />
  <Cameras>
    <Camera Name="Background Preview" eyeX="-17" eyeY="24" eyeZ="50" lookX="12" lookY="-13" lookZ="-58" upX="0" upY="1" upZ="0" />
  </Cameras>
</Workspace>