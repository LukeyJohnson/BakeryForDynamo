<Workspace Version="1.1.0.2094" X="-2.755" Y="145.8175" zoom="1.1575" Name="LunchBox Get Parameter Value" Description="Gets parameter values from a Revit element." ID="0e6286d2-d968-4356-aa39-94cedc339648" Category="LunchBox.Revit.Parameters">
  <NamespaceResolutionMap />
  <Elements>
    <PythonNodeModels.PythonNode guid="656c4173-704a-42df-8901-39974c260c33" type="PythonNodeModels.PythonNode" nickname="Python Script" x="361.137666829819" y="0" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false" inputcount="2">
      <Script>#Copyright (c) 2014, Nathan Miller
#The Proving Ground http://theprovingground.org

# Default imports
import clr

# Import RevitAPI
clr.AddReference("RevitAPI")
import Autodesk
from Autodesk.Revit.DB import *

# Import DocumentManager and TransactionManager
clr.AddReference("RevitServices")
import RevitServices
from RevitServices.Persistence import DocumentManager
from RevitServices.Transactions import TransactionManager

# Import ToDSType(bool) extension method
clr.AddReference("RevitNodes")
import Revit
clr.ImportExtensions(Revit.Elements)

#The input to this node will be stored in the IN[0] variable.

doc =  DocumentManager.Instance.CurrentDBDocument
app =  DocumentManager.Instance.CurrentUIApplication.Application

elements = UnwrapElement(IN[0])
parameter = IN[1]

values = []
if hasattr(elements, "__iter__"):
	output = []
	for elem in elements:
		if hasattr(elem, "__iter__"):
			vals = []
			for e in elem:
				for p in elem.Parameters:
					if p.Definition.Name == parameter:		
						parm = p.AsValueString()
						if (parm is None):
							parm = p.AsString()
				vals.append(parm)
			values.append(vals)
		else:
			for p in elem.Parameters:
				if p.Definition.Name == parameter:		
					parm = p.AsValueString()
					if (parm is None):
							parm = p.AsString()
			values.append(parm)
	output.append(values)
else:
	parm = 	elements.Parameter[parameter].AsValueString()
	output = parm



#Assign your output to the OUT variable
OUT = output</Script>
    </PythonNodeModels.PythonNode>
    <Dynamo.Graph.Nodes.CustomNodes.Symbol guid="7e28682b-8da5-402b-9372-2fc597d87db5" type="Dynamo.Graph.Nodes.CustomNodes.Symbol" nickname="Input" x="149" y="-18" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false" isPinned="false">
      <Symbol value="Element" />
    </Dynamo.Graph.Nodes.CustomNodes.Symbol>
    <Dynamo.Graph.Nodes.CustomNodes.Symbol guid="7bae5c81-9630-47ff-931e-48931107c426" type="Dynamo.Graph.Nodes.CustomNodes.Symbol" nickname="Input" x="147.180345572354" y="49.585313174946" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false" isPinned="false">
      <Symbol value="ParamName" />
    </Dynamo.Graph.Nodes.CustomNodes.Symbol>
  </Elements>
  <Connectors>
    <Dynamo.Graph.Connectors.ConnectorModel start="7e28682b-8da5-402b-9372-2fc597d87db5" start_index="0" end="656c4173-704a-42df-8901-39974c260c33" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="7bae5c81-9630-47ff-931e-48931107c426" start_index="0" end="656c4173-704a-42df-8901-39974c260c33" end_index="1" portType="0" />
  </Connectors>
  <Notes />
  <Annotations />
  <Presets />
  <Cameras>
    <Camera Name="Background Preview" eyeX="-17" eyeY="24" eyeZ="50" lookX="12" lookY="-13" lookZ="-58" upX="0" upY="1" upZ="0" />
  </Cameras>
</Workspace>