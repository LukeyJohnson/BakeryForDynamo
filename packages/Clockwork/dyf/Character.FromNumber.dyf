<Workspace Version="0.8.1.1823" X="30" Y="277.200911111111" zoom="0.876078431372549" Name="Character.FromNumber" ID="58f9bd74-bb7e-420d-a95b-8ca242296c2c" Description="Converts a number into a character (where 1 = A, 2 = B, ... , 27 = AA, 28 = AB etc.)." Category="Clockwork.Core.String.Create">
  <NamespaceResolutionMap>
    <ClassMap partialName="String" resolvedName="DSCore.String" assemblyName="DSCoreNodes.dll" />
    <ClassMap partialName="List" resolvedName="DSCore.List" assemblyName="DSCoreNodes.dll" />
    <ClassMap partialName="Math" resolvedName="DSCore.Math" assemblyName="DSCoreNodes.dll" />
  </NamespaceResolutionMap>
  <Elements>
    <Dynamo.Nodes.Symbol guid="91f5b926-ad6d-4975-a8e3-8285ef0bf6e2" type="Dynamo.Nodes.Symbol" nickname="Input" x="0" y="83.5633333333333" isVisible="true" isUpstreamVisible="true" lacing="Disabled">
      <Symbol value="n : int" />
    </Dynamo.Nodes.Symbol>
    <Dynamo.Nodes.Symbol guid="334df9b8-e524-4f82-aec3-49352fa0c503" type="Dynamo.Nodes.Symbol" nickname="Input" x="0" y="0" isVisible="true" isUpstreamVisible="true" lacing="Disabled">
      <Symbol value="upperCase : bool = false" />
    </Dynamo.Nodes.Symbol>
    <Dynamo.Nodes.Output guid="c1267190-d9ec-48ad-b60b-2b782b19de23" type="Dynamo.Nodes.Output" nickname="Output" x="1179" y="226.196666666667" isVisible="true" isUpstreamVisible="true" lacing="Disabled">
      <Symbol value="str" />
    </Dynamo.Nodes.Output>
    <Dynamo.Nodes.CodeBlockNodeModel guid="1efd91c8-28f6-403d-814f-2366d9db47cd" type="Dynamo.Nodes.CodeBlockNodeModel" nickname="Code Block" x="332" y="37.2183333333333" isVisible="true" isUpstreamVisible="true" lacing="Disabled" CodeText="// Build a lowercase/uppercase alphabet with an empty string at the beginning&#xA;alpha1 = &quot;A*B*C*D*E*F*G*H*I*J*K*L*M*N*O*P*Q*R*S*T*U*V*W*X*Y*Z&quot;;&#xA;alpha2 = String.ChangeCase(alpha1,uppercase);&#xA;alpha3 = String.Split(alpha2,&quot;*&quot;);&#xA;alpha4 = List.AddItemToFront(&quot;&quot;,alpha3);&#xA;// First digit&#xA;string1 = List.GetItemAtIndex(alpha4,Math.Floor((n-1)/26));&#xA;// Second digit&#xA;rest = n%26;&#xA;string2 = List.GetItemAtIndex(alpha4,(rest&gt;0 ? rest : 26));&#xA;// Entire string&#xA;string1 + string2;" ShouldFocus="false" />
  </Elements>
  <Connectors>
    <Dynamo.Models.ConnectorModel start="91f5b926-ad6d-4975-a8e3-8285ef0bf6e2" start_index="0" end="1efd91c8-28f6-403d-814f-2366d9db47cd" end_index="1" portType="0" />
    <Dynamo.Models.ConnectorModel start="334df9b8-e524-4f82-aec3-49352fa0c503" start_index="0" end="1efd91c8-28f6-403d-814f-2366d9db47cd" end_index="0" portType="0" />
    <Dynamo.Models.ConnectorModel start="1efd91c8-28f6-403d-814f-2366d9db47cd" start_index="7" end="c1267190-d9ec-48ad-b60b-2b782b19de23" end_index="0" portType="0" />
  </Connectors>
  <Notes />
  <Annotations />
</Workspace>