<Workspace Version="0.9.0.2912" X="250.504978454036" Y="188.527718005538" zoom="1.42639164656832" Name="Create Annotation Tag" Description="This node will create an annotation tag at a given location, of given type and in a supplied view. If only single view is supplied then all tags will be created in that view. " ID="feec7bb7-cd2a-412c-8f4e-d51cb409dc63" Category="Archi-lab_Grimshaw.Modify">
  <NamespaceResolutionMap />
  <Elements>
    <Dynamo.Nodes.Symbol guid="8f3b379e-eaca-4346-805c-f18b97c1e713" type="Dynamo.Nodes.Symbol" nickname="Input" x="0" y="0" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True">
      <Symbol value="TagLocations" />
    </Dynamo.Nodes.Symbol>
    <Dynamo.Nodes.Symbol guid="7707d45d-edf0-4255-9557-5c0db45709e1" type="Dynamo.Nodes.Symbol" nickname="Input" x="3.14451260185012" y="59.8573054136284" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True">
      <Symbol value="TagType" />
    </Dynamo.Nodes.Symbol>
    <Dynamo.Nodes.Symbol guid="476be264-1cf2-46d5-8c20-c09d0d471cf6" type="Dynamo.Nodes.Symbol" nickname="Input" x="3.14451260185024" y="120.76278169454" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True">
      <Symbol value="Elements" />
    </Dynamo.Nodes.Symbol>
    <Dynamo.Nodes.Symbol guid="a1aae2c5-7b14-4992-8edf-4c988e63b9db" type="Dynamo.Nodes.Symbol" nickname="Input" x="5.4734557374469" y="180.146682764117" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True">
      <Symbol value="Views" />
    </Dynamo.Nodes.Symbol>
    <Dynamo.Nodes.Output guid="7f5266be-ff45-4146-857f-3cc41c233699" type="Dynamo.Nodes.Output" nickname="Output" x="402.37468047358" y="57.1177504933909" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False">
      <Symbol value="Tags" />
    </Dynamo.Nodes.Output>
    <PythonNodeModels.PythonNode guid="3cc76743-a463-49bf-9cec-a5aa76763828" type="PythonNodeModels.PythonNode" nickname="Python Script" x="241.011351454361" y="58.7448653945481" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" inputcount="6">
      <Script>#Copyright(c) 2015, Konrad K Sobon
# @arch_laboratory, http://archi-lab.net

import clr
clr.AddReference('ProtoGeometry')
from Autodesk.DesignScript.Geometry import *

# Import Element wrapper extension methods
clr.AddReference("RevitNodes")
import Revit
clr.ImportExtensions(Revit.Elements)

# Import geometry conversion extension methods
clr.ImportExtensions(Revit.GeometryConversion)

# Import DocumentManager and TransactionManager
clr.AddReference("RevitServices")
import RevitServices
from RevitServices.Persistence import DocumentManager
from RevitServices.Transactions import TransactionManager

doc = DocumentManager.Instance.CurrentDBDocument
uiapp = DocumentManager.Instance.CurrentUIApplication
app = uiapp.Application

# Import RevitAPI
clr.AddReference("RevitAPI")
import Autodesk
from Autodesk.Revit.DB import *

import sys
pyt_path = r'C:\Program Files (x86)\IronPython 2.7\Lib'
sys.path.append(pyt_path)

#The inputs to this node will be stored as a list in the IN variable.
dataEnteringNode = IN

locationPts = UnwrapElement(IN[0])
tagType = UnwrapElement(IN[1])
elements = UnwrapElement(IN[2])

if IN[4] != None:
	link = UnwrapElement(IN[4])
else:
	link = None
	
RunIt = IN[5]

if isinstance(IN[3], list):
	views = [UnwrapElement(i) for i in IN[3]]
else:
	views = UnwrapElement(IN[3])

def toRvtPoint(point):
	return point.ToXyz()

def toRvtId(_id):
	if isinstance(_id, int) or isinstance(_id, str):
		id = ElementId(int(_id))
		return id
	elif isinstance(_id, ElementId):
		return _id

def GetUVPoint(pt):
	if type(pt) == Autodesk.DesignScript.Geometry.Point:
		return Autodesk.Revit.DB.UV(pt.X, pt.Y)
	elif type(pt) == Autodesk.DesignScript.Geometry.UV:
		return Autodesk.Revit.DB.UV(pt.U, pt.V)

def CreateSpaceTag(space, uv, view):
	doc = DocumentManager.Instance.CurrentDBDocument
	return doc.Create.NewSpaceTag(space, uv, view)

tagTypeId = toRvtId(tagType.Id)

try:
	errorReport = None
	if RunIt:
		if tagType.Category.Name == "Room Tags":
			TransactionManager.Instance.EnsureInTransaction(doc)
			roomTags = []
			if isinstance(views, list):
				for i, j, k in zip(elements, views, locationPts):
					roomId = LinkElementId(i.Id)
					location = Autodesk.Revit.DB.UV(toRvtPoint(k).X, toRvtPoint(k).Y)
					roomTag = doc.Create.NewRoomTag(roomId, location, j.Id)
					roomTag.RoomTagType = tagType
					roomTags.append(roomTag)
			else:
				for i, j in zip(elements, locationPts):
					if link != None:
						roomId = LinkElementId(link.Id, i.Id)
					else:
						roomId = LinkElementId(i.Id)
					location = Autodesk.Revit.DB.UV(toRvtPoint(j).X, toRvtPoint(j).Y)
					roomTag = doc.Create.NewRoomTag(roomId, location, views.Id)
					roomTag.RoomTagType = tagType
					roomTags.append(roomTag)
			TransactionManager.Instance.TransactionTaskDone()
			result = roomTags
		elif tagType.Category.Name == "Space Tags":
			TransactionManager.Instance.EnsureInTransaction(doc)
			roomTags = []
			if isinstance(views, list):
				for i, j, k in zip(elements, views, locationPts):
					uv = GetUVPoint(k)
					spaceTag = CreateSpaceTag(i, uv, j)
					spaceTag.SpaceTagType = tagType
					roomTags.append(spaceTag)
			else:
				for i, j in zip(elements, locationPts):
					uv = GetUVPoint(j)
					spaceTag = CreateSpaceTag(i, uv, views)
					spaceTag.SpaceTagType = tagType
					roomTags.append(spaceTag)
			TransactionManager.Instance.TransactionTaskDone()
			result = roomTags
		else:
			TransactionManager.Instance.EnsureInTransaction(doc)
			tags = []
			if isinstance(views, list):
				for i,j,k in zip(elements, views, locationPts):
					location = toRvtPoint(k)
					tag = doc.Create.NewTag(j, i, False, TagMode.TM_ADDBY_CATEGORY, TagOrientation.Horizontal, location)
					tag.ChangeTypeId(tagTypeId)
					tags.append(tag)
			else:
				for i, j in zip(elements, locationPts):
					location = toRvtPoint(j)
					tag = doc.Create.NewTag(views, i, False, TagMode.TM_ADDBY_CATEGORY, TagOrientation.Horizontal, location)
					tag.ChangeTypeId(tagTypeId)
					tags.append(tag)
			TransactionManager.Instance.TransactionTaskDone()
			result = tags
	else:
		result = "RunIt is set to False."
except:
	# if error accurs anywhere in the process catch it
	import traceback
	errorReport = traceback.format_exc()

#Assign your output to the OUT variable
if errorReport == None:
	OUT = result
else:
	OUT = errorReport</Script>
    </PythonNodeModels.PythonNode>
    <Dynamo.Nodes.Symbol guid="039657d0-d1f7-40c7-a491-b1914833a669" type="Dynamo.Nodes.Symbol" nickname="Input" x="-115.329460074875" y="244.303367054086" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True">
      <Symbol value="LinkInstance:var=null" />
    </Dynamo.Nodes.Symbol>
    <Dynamo.Nodes.Symbol guid="f7a7e3af-854c-4612-aa99-ddd73c7fd580" type="Dynamo.Nodes.Symbol" nickname="Input" x="-75.2016858673784" y="307.068620304662" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True">
      <Symbol value="RunIt:bool=false" />
    </Dynamo.Nodes.Symbol>
  </Elements>
  <Connectors>
    <Dynamo.Models.ConnectorModel start="8f3b379e-eaca-4346-805c-f18b97c1e713" start_index="0" end="3cc76743-a463-49bf-9cec-a5aa76763828" end_index="0" portType="0" />
    <Dynamo.Models.ConnectorModel start="7707d45d-edf0-4255-9557-5c0db45709e1" start_index="0" end="3cc76743-a463-49bf-9cec-a5aa76763828" end_index="1" portType="0" />
    <Dynamo.Models.ConnectorModel start="476be264-1cf2-46d5-8c20-c09d0d471cf6" start_index="0" end="3cc76743-a463-49bf-9cec-a5aa76763828" end_index="2" portType="0" />
    <Dynamo.Models.ConnectorModel start="a1aae2c5-7b14-4992-8edf-4c988e63b9db" start_index="0" end="3cc76743-a463-49bf-9cec-a5aa76763828" end_index="3" portType="0" />
    <Dynamo.Models.ConnectorModel start="3cc76743-a463-49bf-9cec-a5aa76763828" start_index="0" end="7f5266be-ff45-4146-857f-3cc41c233699" end_index="0" portType="0" />
    <Dynamo.Models.ConnectorModel start="039657d0-d1f7-40c7-a491-b1914833a669" start_index="0" end="3cc76743-a463-49bf-9cec-a5aa76763828" end_index="4" portType="0" />
    <Dynamo.Models.ConnectorModel start="f7a7e3af-854c-4612-aa99-ddd73c7fd580" start_index="0" end="3cc76743-a463-49bf-9cec-a5aa76763828" end_index="5" portType="0" />
  </Connectors>
  <Notes />
  <Annotations />
  <Presets />
  <Cameras>
    <Camera Name="Background Preview" eyeX="254.816619873047" eyeY="885.260864257813" eyeZ="-80.8547668457031" lookX="1.17612087726593" lookY="-407.623352050781" lookZ="-355.847351074219" upX="0.00196595443412662" upY="0.80385684967041" upZ="-0.59481954574585" />
  </Cameras>
</Workspace>