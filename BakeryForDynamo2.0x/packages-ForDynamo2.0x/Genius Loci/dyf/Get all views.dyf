<Workspace Version="1.3.3.4651" X="-40.9902447610691" Y="121.859014119805" zoom="0.823465932541053" ScaleFactor="1" Name="Get all views" Description="Collects all views (without the sheets) in the active or given document.&#xD;&#xA;Inspired by a Archilab's node." ID="c8e81411-6f5c-461e-8b9e-4bccecc03328" Category="GeniusLoci.View">
  <NamespaceResolutionMap>
    <ClassMap partialName="DSCore.String" resolvedName="DSCore.String" assemblyName="DSCoreNodes.dll" />
    <ClassMap partialName="DSCore.List" resolvedName="DSCore.List" assemblyName="DSCoreNodes.dll" />
  </NamespaceResolutionMap>
  <Elements>
    <Dynamo.Graph.Nodes.CustomNodes.Output guid="b60d7c43-9b1c-499f-8f88-ca769265e99a" type="Dynamo.Graph.Nodes.CustomNodes.Output" nickname="Output" x="1388.09902684802" y="95.7840218573127" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false">
      <PortInfo index="0" default="False" />
      <Symbol value="View" />
    </Dynamo.Graph.Nodes.CustomNodes.Output>
    <Dynamo.Graph.Nodes.CustomNodes.Output guid="289c7e7c-191b-4960-9f4d-c5da4900a5c1" type="Dynamo.Graph.Nodes.CustomNodes.Output" nickname="Output" x="1372.05156739196" y="186.333495809639" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false">
      <PortInfo index="0" default="False" />
      <Symbol value="Schedule" />
    </Dynamo.Graph.Nodes.CustomNodes.Output>
    <Dynamo.Graph.Nodes.CustomNodes.Output guid="4a04d310-0a91-4227-a047-30500ec44732" type="Dynamo.Graph.Nodes.CustomNodes.Output" nickname="Output" x="1372.8953028969" y="267.716405574835" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false">
      <PortInfo index="0" default="False" />
      <Symbol value="Legend" />
    </Dynamo.Graph.Nodes.CustomNodes.Output>
    <Dynamo.Graph.Nodes.CustomNodes.Output guid="aab2c751-5099-4b42-83c6-6c4629e30b52" type="Dynamo.Graph.Nodes.CustomNodes.Output" nickname="Output" x="1376.52755459178" y="356.255890105516" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false">
      <PortInfo index="0" default="False" />
      <Symbol value="Sheet" />
    </Dynamo.Graph.Nodes.CustomNodes.Output>
    <Dynamo.Graph.Nodes.CustomNodes.Output guid="d1cf05ce-7926-4531-a6bc-218ceb5251ce" type="Dynamo.Graph.Nodes.CustomNodes.Output" nickname="Output" x="1379.48728554483" y="460.281280567334" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false">
      <PortInfo index="0" default="False" />
      <Symbol value="(Without Sheet) All Views" />
    </Dynamo.Graph.Nodes.CustomNodes.Output>
    <Dynamo.Graph.Nodes.CodeBlockNodeModel guid="f2b4583d-8014-413f-b27e-23805390cb97" type="Dynamo.Graph.Nodes.CodeBlockNodeModel" nickname="Code Block" x="751.351114668979" y="305.622751895944" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false" CodeText="t1=DSCore.List.Flatten(x[0..18],-1);&#xA;x[19];&#xA;x[20];&#xA;x[21];&#xA;DSCore.List.Flatten({t1, x[20], x[19]},-1);" ShouldFocus="false">
      <PortInfo index="0" default="False" />
    </Dynamo.Graph.Nodes.CodeBlockNodeModel>
    <PythonNodeModels.PythonNode guid="05ab3eeb-24f9-4ce3-8cfb-b99e71c5276a" type="PythonNodeModels.PythonNode" nickname="List All Views" x="592.157853662269" y="299.699024619892" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false" inputcount="1">
      <PortInfo index="0" default="False" />
      <Script>#Copyright(c) 2015, Konrad Sobon
# @arch_laboratory, http://archi-lab.net

import clr
clr.AddReference('ProtoGeometry')
from Autodesk.DesignScript.Geometry import *

# Import DocumentManager and TransactionManager
clr.AddReference("RevitServices")
import RevitServices
from RevitServices.Persistence import DocumentManager
from RevitServices.Transactions import TransactionManager

# Import RevitAPI
clr.AddReference("RevitAPI")
import Autodesk
from Autodesk.Revit.DB import *

doc = DocumentManager.Instance.CurrentDBDocument
uiapp = DocumentManager.Instance.CurrentUIApplication
app = uiapp.Application

from System.Collections.Generic import *

# Import ToDSType(bool) extension method
clr.AddReference("RevitNodes")
import Revit
clr.ImportExtensions(Revit.Elements)

#The inputs to this node will be stored as a list in the IN variable.
dataEnteringNode = IN


#Part of script from Clockwork
inputdoc = UnwrapElement(IN[0])
if inputdoc == None:
	doc = DocumentManager.Instance.CurrentDBDocument
elif inputdoc.GetType().ToString() == "Autodesk.Revit.DB.RevitLinkInstance":
	doc = inputdoc.GetLinkDocument()
elif inputdoc.GetType().ToString() == "Autodesk.Revit.DB.Document":
	doc = inputdoc
else: doc = None

views = FilteredElementCollector(doc).OfClass(View).ToElements()

#sort views into separate lists based on view type
areaPlans, ceilingPlans, columnSchedules = [], [], []
costReport, details, draftingViews = [], [], []
drawingSheets, elevations, engineetingPlans = [], [], []
floorPlans, internal, legends, loadReports = [], [], [], []
panelSchedules, pressureLossReports, renderings = [], [], []
reports, schedules, sections, threeD = [], [], [], []
undefined, walkthrough, revisionschedules = [], [], []
for i in views:
	if not i.IsTemplate:
		if i.ViewType == ViewType.AreaPlan:
			areaPlans.append(i.ToDSType(True))
		elif i.ViewType == ViewType.CeilingPlan:
			ceilingPlans.append(i.ToDSType(True))
		elif i.ViewType == ViewType.ColumnSchedule:
			columnSchedules.append(i.ToDSType(True))
		elif i.ViewType == ViewType.CostReport:
			costReport.append(i.ToDSType(True))
		elif i.ViewType == ViewType.Detail:
			details.append(i.ToDSType(True))
		elif i.ViewType == ViewType.DraftingView:
			draftingViews.append(i.ToDSType(True))
		elif i.ViewType == ViewType.DrawingSheet:
			drawingSheets.append(i.ToDSType(True))
		elif i.ViewType == ViewType.Elevation:
			elevations.append(i.ToDSType(True))
		elif i.ViewType == ViewType.EngineeringPlan:
			engineetingPlans.append(i.ToDSType(True))
		elif i.ViewType == ViewType.FloorPlan:
			floorPlans.append(i.ToDSType(True))
		elif i.ViewType == ViewType.Internal:
			internal.append(i.ToDSType(True))
		elif i.ViewType == ViewType.Legend:
			legends.append(i.ToDSType(True))
		elif i.ViewType == ViewType.LoadsReport:
			loadReports.append(i.ToDSType(True))
		elif i.ViewType == ViewType.PanelSchedule:
			panelSchedules.append(i.ToDSType(True))
		elif i.ViewType == ViewType.PresureLossReport:
			pressureLossReports.append(i.ToDSType(True))
		elif i.ViewType == ViewType.Rendering:
			renderings.append(i.ToDSType(True))
		elif i.ViewType == ViewType.Report:
			reports.append(i.ToDSType(True))
		elif i.ViewType == ViewType.Schedule:
			if not i.IsTitleblockRevisionSchedule :
				schedules.append(i.ToDSType(True))
		elif i.ViewType == ViewType.Section:
			sections.append(i.ToDSType(True))
		elif i.ViewType == ViewType.ThreeD:
			threeD.append(i.ToDSType(True))
		elif i.ViewType == ViewType.Undefined:
			undefined.append(i.ToDSType(True))
		elif i.ViewType == ViewType.Walkthrough:
			walkthrough.append(i.ToDSType(True))
		else:
			continue
#Assign your output to the OUT variable
OUT = areaPlans, ceilingPlans, columnSchedules, costReport, \
	details, draftingViews, elevations, \
	engineetingPlans, floorPlans, internal, \
	loadReports, panelSchedules, pressureLossReports, \
	renderings, reports, sections, threeD, \
	undefined, walkthrough, legends, schedules, drawingSheets</Script>
    </PythonNodeModels.PythonNode>
    <Dynamo.Graph.Nodes.CustomNodes.Symbol guid="02809fea-a815-42e5-9f3b-6c42293edbd3" type="Dynamo.Graph.Nodes.CustomNodes.Symbol" nickname="Input" x="138.184520165801" y="301.823033666064" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false" isPinned="false">
      <Symbol value="// Use only if you want to query a linked model&#xD;&#xA;docOrRevitLinkInstance : var = null" />
    </Dynamo.Graph.Nodes.CustomNodes.Symbol>
  </Elements>
  <Connectors>
    <Dynamo.Graph.Connectors.ConnectorModel start="f2b4583d-8014-413f-b27e-23805390cb97" start_index="0" end="b60d7c43-9b1c-499f-8f88-ca769265e99a" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="f2b4583d-8014-413f-b27e-23805390cb97" start_index="1" end="4a04d310-0a91-4227-a047-30500ec44732" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="f2b4583d-8014-413f-b27e-23805390cb97" start_index="2" end="289c7e7c-191b-4960-9f4d-c5da4900a5c1" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="f2b4583d-8014-413f-b27e-23805390cb97" start_index="3" end="aab2c751-5099-4b42-83c6-6c4629e30b52" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="f2b4583d-8014-413f-b27e-23805390cb97" start_index="4" end="d1cf05ce-7926-4531-a6bc-218ceb5251ce" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="05ab3eeb-24f9-4ce3-8cfb-b99e71c5276a" start_index="0" end="f2b4583d-8014-413f-b27e-23805390cb97" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="02809fea-a815-42e5-9f3b-6c42293edbd3" start_index="0" end="05ab3eeb-24f9-4ce3-8cfb-b99e71c5276a" end_index="0" portType="0" />
  </Connectors>
  <Notes />
  <Annotations />
  <Presets />
  <Cameras>
    <Camera Name="Aperçu en arrière-plan" eyeX="-17" eyeY="24" eyeZ="50" lookX="12" lookY="-13" lookZ="-58" upX="0" upY="1" upZ="0" />
  </Cameras>
</Workspace>