<Workspace Version="0.8.0.950" X="-59.9872117585696" Y="264.847057835196" zoom="1.03605787560061" Name="Get Element Position Rotate Mirror" ID="7e6294a9-9e07-4b6b-b02b-3b140de98b0a" Description="details to various outputs" Category="Bakery.Revit.Elements">
  <NamespaceResolutionMap>
    <ClassMap partialName="List" resolvedName="DSCore.List" assemblyName="DSCoreNodes.dll" />
  </NamespaceResolutionMap>
  <Elements>
    <Dynamo.Nodes.Symbol guid="d154c05c-42bb-4fbc-8ef4-fc47e7cf4430" type="Dynamo.Nodes.Symbol" nickname="Input" x="-23.1190150478796" y="-198.62302560504" isVisible="true" isUpstreamVisible="true" lacing="Disabled">
      <Symbol value="List of elements" />
    </Dynamo.Nodes.Symbol>
    <Dynamo.Nodes.CodeBlockNodeModel guid="54789e5e-5081-4004-aedf-57e03091e2c4" type="Dynamo.Nodes.CodeBlockNodeModel" nickname="transpose list and split output" x="530.283277661673" y="-342.887728323832" isVisible="true" isUpstreamVisible="true" lacing="Disabled" CodeText="IN=List.Transpose(inputlist);&#xA;ElementListA=IN[0];&#xA;XYZposition=IN[1];&#xA;XYZvectorFacing=IN[2];&#xA;XYZvectorHand=IN[3];&#xA;Mirrored=IN[4];&#xA;Mirrored_FacingAxis=IN[5];&#xA;Mirrored_HandAxis=IN[6];&#xA;CanFlipFacing=IN[7];&#xA;CanFlipHand=IN[8];" ShouldFocus="false" />
    <DSIronPythonNode.PythonNode guid="e008c5a8-bec8-4adb-9df0-60453720c10e" type="DSIronPythonNode.PythonNode" nickname="Element.dataExtractor&#xD;&#xA;" x="242.88098495212" y="-198.62302560504" isVisible="true" isUpstreamVisible="true" lacing="Disabled" inputcount="1">
      <Script>import clr
clr.AddReference('ProtoGeometry')
from Autodesk.DesignScript.Geometry import *

# Import RevitAPI
clr.AddReference('RevitAPI')
import Autodesk
#The inputs to this node will be stored as a list in the IN variable.
dataEnteringNode = IN

elements = []
for i in IN[0]:
	elements.append(UnwrapElement(i))
	

outlist = [] #export list
templist = [] #temporary list to group attributes by element
for i in elements:
	countA = 0
	while countA != 1:
		templist.append(i) #element
		templist.append(i.Location.Point) #XYZ position
		templist.append(i.FacingOrientation) #vector XYZ Facing
		templist.append(i.HandOrientation) #vector XYZ Hand
		templist.append(i.Mirrored)	#is mirrored?
		templist.append(i.FacingFlipped) #is mirrored over X axis?
		templist.append(i.HandFlipped) #is mirrored over Y axis?
		templist.append(i.CanFlipFacing)
		templist.append(i.CanFlipHand)
		outlist.append(templist[:]) #append all attributes of element to outlist
		countA = 1 #up the count to kill while function
	del templist[:] #clear the templist

#Assign your output to the OUT variable
OUT = outlist #Export outlist with all atributes of elements grouped by nested list</Script>
    </DSIronPythonNode.PythonNode>
    <DSIronPythonNode.PythonNode guid="2d9d1497-1ebc-4e42-bc81-ec2bddda7b3f" type="DSIronPythonNode.PythonNode" nickname="XYZ splitter, cleans () and ," x="1204.88098495212" y="-239.823858938374" isVisible="true" isUpstreamVisible="true" lacing="Disabled" inputcount="1">
      <Script>import clr
clr.AddReference('ProtoGeometry')
from Autodesk.DesignScript.Geometry import *
#The inputs to this node will be stored as a list in the IN variable.
dataEnteringNode = IN
outlist = []
templist = []
templistA = []
for item in IN[0]:
	item = str(item)
	item = item.replace('(', '')
	item = item.replace(')', '')
	item = item.replace(',', '')
	templist.append(item)

for item in templist:
	outlist.append(item.split(" "))
	
for itemA in outlist:
	for itemB in itemA:
		itemB = float(itemB)

#Assign your output to the OUT variable
OUT = outlist</Script>
    </DSIronPythonNode.PythonNode>
    <DSIronPythonNode.PythonNode guid="824c75fd-41f0-4ec7-9387-fb75c6bdabab" type="DSIronPythonNode.PythonNode" nickname="XYZ splitter, cleans () and ," x="930.88098495212" y="-52.0421922717069" isVisible="true" isUpstreamVisible="true" lacing="Disabled" inputcount="1">
      <Script>import clr
clr.AddReference('ProtoGeometry')
from Autodesk.DesignScript.Geometry import *
#The inputs to this node will be stored as a list in the IN variable.
dataEnteringNode = IN
outlist = []
templist = []
templistA = []
for item in IN[0]:
	item = str(item)
	item = item.replace('(', '')
	item = item.replace(')', '')
	item = item.replace(',', '')
	templist.append(item)

for item in templist:
	outlist.append(item.split(" "))
	
for itemA in outlist:
	for itemB in itemA:
		itemB = float(itemB)

#Assign your output to the OUT variable
OUT = outlist</Script>
    </DSIronPythonNode.PythonNode>
    <DSIronPythonNode.PythonNode guid="22adecff-93c7-4af0-a979-3f795180821e" type="DSIronPythonNode.PythonNode" nickname="list.Item.ToFloat" x="1641.88098495212" y="-67.6971922717069" isVisible="true" isUpstreamVisible="true" lacing="Disabled" inputcount="1">
      <Script>import clr
clr.AddReference('ProtoGeometry')
from Autodesk.DesignScript.Geometry import *
#The inputs to this node will be stored as a list in the IN variable.
dataEnteringNode = IN
outlist = []

for item in IN[0]:
	outlist.append(float(item))

#Assign your output to the OUT variable
OUT = outlist</Script>
    </DSIronPythonNode.PythonNode>
    <Dynamo.Nodes.CodeBlockNodeModel guid="8d9f269b-70de-4df8-9bed-f39d6318768e" type="Dynamo.Nodes.CodeBlockNodeModel" nickname="transpose list and split output" x="1204.88098495212" y="-47.8238589383739" isVisible="true" isUpstreamVisible="true" lacing="Disabled" CodeText="IN=List.Transpose(inputlist);&#xA;X=IN[0];&#xA;Y=IN[1];&#xA;Z=IN[2];" ShouldFocus="false" />
    <DSIronPythonNode.PythonNode guid="c6de8da2-6004-4742-bfa5-6ecb0519b600" type="DSIronPythonNode.PythonNode" nickname="list.Item.ToFloat" x="1641.88098495212" y="16.3028077282931" isVisible="true" isUpstreamVisible="true" lacing="Disabled" inputcount="1">
      <Script>import clr
clr.AddReference('ProtoGeometry')
from Autodesk.DesignScript.Geometry import *
#The inputs to this node will be stored as a list in the IN variable.
dataEnteringNode = IN
outlist = []

for item in IN[0]:
	outlist.append(float(item))

#Assign your output to the OUT variable
OUT = outlist</Script>
    </DSIronPythonNode.PythonNode>
    <Dynamo.Nodes.CodeBlockNodeModel guid="78cda2e3-3d4d-483c-812b-b50b733c1966" type="Dynamo.Nodes.CodeBlockNodeModel" nickname="transpose list and split output" x="1641.88098495212" y="-235.60552560504" isVisible="true" isUpstreamVisible="true" lacing="Disabled" CodeText="IN=List.Transpose(inputlist);&#xA;X=IN[0];&#xA;Y=IN[1];&#xA;Z=IN[2];" ShouldFocus="false" />
    <DSIronPythonNode.PythonNode guid="3f30b422-8b25-4306-9845-479bbc50559f" type="DSIronPythonNode.PythonNode" nickname="Vector to degrees" x="2078.88098495212" y="-38.6971922717069" isVisible="true" isUpstreamVisible="true" lacing="Disabled" inputcount="2">
      <Script>import clr
from math import *
clr.AddReference('ProtoGeometry')
from Autodesk.DesignScript.Geometry import *
#The inputs to this node will be stored as a list in the IN variable.
dataEnteringNode = IN
X=IN[0]
Y=IN[1]
outlist = []
templist = []
templist2 = []
count = 0


for item in X:
	templist.append((acos(item)))


while count &lt; len(templist):
#for item in templist:
	if Y[count] &gt; 0:
		templist2.append(degrees(templist[count]))
	elif Y[count] == 0:
		templist2.append(degrees(templist[count]))
	elif Y[count] &lt; 0:
		templist2.append((degrees(templist[count])) + (2*(180-(degrees(templist[count])))))
	count = count + 1

for item in templist2:
	if item == 0:
		outlist.append(0)
	else:
		outlist.append(360 - item)

#while count &lt; len(X):
#
#	if X[count] &lt;0:
#		outlist.append(360 - degrees(acos(Y[count]*1)))
#	else:	
#		outlist.append(degrees(acos(Y[count]*1)))
#	count = count + 1

#Assign your output to the OUT variable
OUT = outlist</Script>
    </DSIronPythonNode.PythonNode>
    <DSIronPythonNode.PythonNode guid="c381af81-a572-434c-a4f2-171d84ade49d" type="DSIronPythonNode.PythonNode" nickname="list.Item.ToFloat" x="2078.88098495212" y="-289.697192271707" isVisible="true" isUpstreamVisible="true" lacing="Disabled" inputcount="1">
      <Script>import clr
clr.AddReference('ProtoGeometry')
from Autodesk.DesignScript.Geometry import *
#The inputs to this node will be stored as a list in the IN variable.
dataEnteringNode = IN
outlist = []

for item in IN[0]:
	outlist.append(float(item))

#Assign your output to the OUT variable
OUT = outlist</Script>
    </DSIronPythonNode.PythonNode>
    <DSIronPythonNode.PythonNode guid="d3ad8044-f85e-403d-bbce-83568a65cae6" type="DSIronPythonNode.PythonNode" nickname="list.Item.ToFloat" x="2078.88098495212" y="-204.697192271707" isVisible="true" isUpstreamVisible="true" lacing="Disabled" inputcount="1">
      <Script>import clr
clr.AddReference('ProtoGeometry')
from Autodesk.DesignScript.Geometry import *
#The inputs to this node will be stored as a list in the IN variable.
dataEnteringNode = IN
outlist = []

for item in IN[0]:
	outlist.append(float(item))

#Assign your output to the OUT variable
OUT = outlist</Script>
    </DSIronPythonNode.PythonNode>
    <DSIronPythonNode.PythonNode guid="de5f6733-44c7-48c8-8c02-d6afdfc73bde" type="DSIronPythonNode.PythonNode" nickname="list.Item.ToFloat" x="2078.88098495212" y="-121.697192271707" isVisible="true" isUpstreamVisible="true" lacing="Disabled" inputcount="1">
      <Script>import clr
clr.AddReference('ProtoGeometry')
from Autodesk.DesignScript.Geometry import *
#The inputs to this node will be stored as a list in the IN variable.
dataEnteringNode = IN
outlist = []

for item in IN[0]:
	outlist.append(float(item))

#Assign your output to the OUT variable
OUT = outlist</Script>
    </DSIronPythonNode.PythonNode>
    <Dynamo.Nodes.Output guid="aaf14d4e-6ddf-4beb-8b27-799be4be0d11" type="Dynamo.Nodes.Output" nickname="Output" x="1222.30766452117" y="104.653977220447" isVisible="true" isUpstreamVisible="true" lacing="Disabled">
      <Symbol value="Is.Mirrorred" />
    </Dynamo.Nodes.Output>
    <Dynamo.Nodes.Output guid="37258dc6-7ded-456b-9a1f-e200442fd744" type="Dynamo.Nodes.Output" nickname="Output" x="2302.88098495212" y="-371.697192271707" isVisible="true" isUpstreamVisible="true" lacing="Disabled">
      <Symbol value="Element" />
    </Dynamo.Nodes.Output>
    <Dynamo.Nodes.Output guid="e02deca6-b73e-463a-8a74-40bfa1f205c3" type="Dynamo.Nodes.Output" nickname="Output" x="2302.88098495212" y="-288.697192271707" isVisible="true" isUpstreamVisible="true" lacing="Disabled">
      <Symbol value="Position X" />
    </Dynamo.Nodes.Output>
    <Dynamo.Nodes.Output guid="d8d75108-9078-4ce0-a5d2-db696e3d076e" type="Dynamo.Nodes.Output" nickname="Output" x="2302.88098495212" y="-205.697192271707" isVisible="true" isUpstreamVisible="true" lacing="Disabled">
      <Symbol value="Position Y" />
    </Dynamo.Nodes.Output>
    <Dynamo.Nodes.Output guid="e1741002-1530-4917-b929-b238b074cf4c" type="Dynamo.Nodes.Output" nickname="Output" x="2302.88098495212" y="-121.697192271707" isVisible="true" isUpstreamVisible="true" lacing="Disabled">
      <Symbol value="Position Z" />
    </Dynamo.Nodes.Output>
    <Dynamo.Nodes.Output guid="c1d53e01-b665-47f7-8e7a-598f285c4cc3" type="Dynamo.Nodes.Output" nickname="Output" x="2302.88098495212" y="-38.6971922717069" isVisible="true" isUpstreamVisible="true" lacing="Disabled">
      <Symbol value="Rotation" />
    </Dynamo.Nodes.Output>
    <Dynamo.Nodes.Output guid="a4401561-8fb1-46ff-a2d9-34d5a9335681" type="Dynamo.Nodes.Output" nickname="Output" x="954.623655466988" y="15.4783400981377" isVisible="true" isUpstreamVisible="true" lacing="Disabled">
      <Symbol value="FlippedFacing" />
    </Dynamo.Nodes.Output>
    <Dynamo.Nodes.Output guid="d91e2fae-b90f-4284-b90c-05f21caf0efa" type="Dynamo.Nodes.Output" nickname="Output" x="895.497440246833" y="175.251806408474" isVisible="true" isUpstreamVisible="true" lacing="Disabled">
      <Symbol value="FlippedHand" />
    </Dynamo.Nodes.Output>
    <Dynamo.Nodes.Output guid="2e810894-f1be-4791-9f55-8eadbb42428e" type="Dynamo.Nodes.Output" nickname="Output" x="1095.83433247531" y="497.122883897838" isVisible="true" isUpstreamVisible="true" lacing="Disabled">
      <Symbol value="CanFlipHand" />
    </Dynamo.Nodes.Output>
    <Dynamo.Nodes.Output guid="b76811ca-870a-4d90-a0fd-97074e314ad8" type="Dynamo.Nodes.Output" nickname="Output" x="1236.03709947719" y="327.697447137296" isVisible="true" isUpstreamVisible="true" lacing="Disabled">
      <Symbol value="CanFlipFacing" />
    </Dynamo.Nodes.Output>
  </Elements>
  <Connectors>
    <Dynamo.Models.ConnectorModel start="d154c05c-42bb-4fbc-8ef4-fc47e7cf4430" start_index="0" end="e008c5a8-bec8-4adb-9df0-60453720c10e" end_index="0" portType="0" />
    <Dynamo.Models.ConnectorModel start="54789e5e-5081-4004-aedf-57e03091e2c4" start_index="1" end="37258dc6-7ded-456b-9a1f-e200442fd744" end_index="0" portType="0" />
    <Dynamo.Models.ConnectorModel start="54789e5e-5081-4004-aedf-57e03091e2c4" start_index="2" end="2d9d1497-1ebc-4e42-bc81-ec2bddda7b3f" end_index="0" portType="0" />
    <Dynamo.Models.ConnectorModel start="54789e5e-5081-4004-aedf-57e03091e2c4" start_index="4" end="824c75fd-41f0-4ec7-9387-fb75c6bdabab" end_index="0" portType="0" />
    <Dynamo.Models.ConnectorModel start="54789e5e-5081-4004-aedf-57e03091e2c4" start_index="5" end="aaf14d4e-6ddf-4beb-8b27-799be4be0d11" end_index="0" portType="0" />
    <Dynamo.Models.ConnectorModel start="54789e5e-5081-4004-aedf-57e03091e2c4" start_index="6" end="a4401561-8fb1-46ff-a2d9-34d5a9335681" end_index="0" portType="0" />
    <Dynamo.Models.ConnectorModel start="54789e5e-5081-4004-aedf-57e03091e2c4" start_index="7" end="d91e2fae-b90f-4284-b90c-05f21caf0efa" end_index="0" portType="0" />
    <Dynamo.Models.ConnectorModel start="54789e5e-5081-4004-aedf-57e03091e2c4" start_index="8" end="b76811ca-870a-4d90-a0fd-97074e314ad8" end_index="0" portType="0" />
    <Dynamo.Models.ConnectorModel start="54789e5e-5081-4004-aedf-57e03091e2c4" start_index="9" end="2e810894-f1be-4791-9f55-8eadbb42428e" end_index="0" portType="0" />
    <Dynamo.Models.ConnectorModel start="e008c5a8-bec8-4adb-9df0-60453720c10e" start_index="0" end="54789e5e-5081-4004-aedf-57e03091e2c4" end_index="0" portType="0" />
    <Dynamo.Models.ConnectorModel start="2d9d1497-1ebc-4e42-bc81-ec2bddda7b3f" start_index="0" end="78cda2e3-3d4d-483c-812b-b50b733c1966" end_index="0" portType="0" />
    <Dynamo.Models.ConnectorModel start="824c75fd-41f0-4ec7-9387-fb75c6bdabab" start_index="0" end="8d9f269b-70de-4df8-9bed-f39d6318768e" end_index="0" portType="0" />
    <Dynamo.Models.ConnectorModel start="22adecff-93c7-4af0-a979-3f795180821e" start_index="0" end="3f30b422-8b25-4306-9845-479bbc50559f" end_index="0" portType="0" />
    <Dynamo.Models.ConnectorModel start="8d9f269b-70de-4df8-9bed-f39d6318768e" start_index="1" end="22adecff-93c7-4af0-a979-3f795180821e" end_index="0" portType="0" />
    <Dynamo.Models.ConnectorModel start="8d9f269b-70de-4df8-9bed-f39d6318768e" start_index="2" end="c6de8da2-6004-4742-bfa5-6ecb0519b600" end_index="0" portType="0" />
    <Dynamo.Models.ConnectorModel start="c6de8da2-6004-4742-bfa5-6ecb0519b600" start_index="0" end="3f30b422-8b25-4306-9845-479bbc50559f" end_index="1" portType="0" />
    <Dynamo.Models.ConnectorModel start="78cda2e3-3d4d-483c-812b-b50b733c1966" start_index="1" end="c381af81-a572-434c-a4f2-171d84ade49d" end_index="0" portType="0" />
    <Dynamo.Models.ConnectorModel start="78cda2e3-3d4d-483c-812b-b50b733c1966" start_index="2" end="d3ad8044-f85e-403d-bbce-83568a65cae6" end_index="0" portType="0" />
    <Dynamo.Models.ConnectorModel start="78cda2e3-3d4d-483c-812b-b50b733c1966" start_index="3" end="de5f6733-44c7-48c8-8c02-d6afdfc73bde" end_index="0" portType="0" />
    <Dynamo.Models.ConnectorModel start="3f30b422-8b25-4306-9845-479bbc50559f" start_index="0" end="c1d53e01-b665-47f7-8e7a-598f285c4cc3" end_index="0" portType="0" />
    <Dynamo.Models.ConnectorModel start="c381af81-a572-434c-a4f2-171d84ade49d" start_index="0" end="e02deca6-b73e-463a-8a74-40bfa1f205c3" end_index="0" portType="0" />
    <Dynamo.Models.ConnectorModel start="d3ad8044-f85e-403d-bbce-83568a65cae6" start_index="0" end="d8d75108-9078-4ce0-a5d2-db696e3d076e" end_index="0" portType="0" />
    <Dynamo.Models.ConnectorModel start="de5f6733-44c7-48c8-8c02-d6afdfc73bde" start_index="0" end="e1741002-1530-4917-b929-b238b074cf4c" end_index="0" portType="0" />
  </Connectors>
  <Notes>
    <Dynamo.Models.NoteModel text="Vector Hand&#xD;&#xA;" x="1348.15319836079" y="-93.9267764751219" />
    <Dynamo.Models.NoteModel text="Position&#xD;&#xA;" x="1815.17579851419" y="-293.006334193464" />
  </Notes>
</Workspace>